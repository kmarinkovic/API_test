{
	"info": {
		"_postman_id": "abc88f8b-443e-48cf-b6fe-729510d03aa6",
		"name": "API_test",
		"description": "#Introduction\nThis is introduction to project\n\n#Prerequisites\nThese are prerequisites\n\n#Setup\nHere you can find project setup",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Create request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c67385e-ee5f-4e1d-9584-b7957f803046",
						"exec": [
							"pm.test(\"Successful POST request\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([201,202])\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "346f8814-7aa4-4738-9cc3-56155c928fe2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": \"weekly\",\r\n        \"status\": \"not completed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": []
		},
		{
			"name": "Create request-no Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a70edf40-bb13-46bb-a068-a7023cdf2461",
						"exec": [
							"pm.test(\"Unsuccessful POST request - missing body\", () => {\r",
							"  pm.response.to.have.status(415);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Response test\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.type).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.eql(\"Unsupported Media Type\");\r",
							"  pm.expect(jsonData.status).to.be.an(\"number\");\r",
							"  pm.expect(jsonData.status).to.eql(415);\r",
							"  pm.expect(jsonData.traceId).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f25276d3-5d55-485b-a114-302069020464",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": []
		},
		{
			"name": "Create request - syntax error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fb9ed6f6-bff4-4762-ae7b-ef4eb93b8f3c",
						"exec": [
							"pm.test(\"Unsuccessful POST request - syntax error\", () => {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Response test\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.errors).to.be.an(\"array\");\r",
							"  pm.expect(jsonData.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.eql(\"One or more validation errors occured\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.status).to.eql(400);\r",
							"  pm.expect(jsonData.traceId).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							"pm.test(\"Content-Type header is application/problem+json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8eb13fcf-f008-4189-ab0e-76abdde7cbb1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": weekly\"\r\n        \"status\": \"not completed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": []
		},
		{
			"name": "Read all request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e4c44490-0b11-4cf6-88c5-d71adf395516",
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "eb24f823-4081-495d-8776-f4537d761134",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John Doe\",\r\n    \"email\": \"john.doe@domain.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": []
		},
		{
			"name": "Read request",
			"id": "418c2a7d-f22d-4abc-a67d-20abb858e2a5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		},
		{
			"name": "Update request",
			"id": "28abbb73-bc77-4b77-b2cb-cb74179a28c9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		},
		{
			"name": "Delete request",
			"id": "ba0ff658-68c2-44df-a700-4215333b0710",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		}
	]
}