{
	"info": {
		"_postman_id": "abc88f8b-443e-48cf-b6fe-729510d03aa6",
		"name": "API_test",
		"description": "**#Introduction**  \nThis is introduction to project\n\n#**Prerequisites**  \nThese are prerequisites\n\n#**Setup**  \nHere you can find project setup",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Create request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3b7dcdf2-bc7e-462d-8302-6500f67d9be5",
						"exec": [
							"pm.test(\"Successful POST request\", () => {\r",
							"  pm.expect(pm.response.code).to.be.oneOf([201,202])\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Successful POST Response\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.name).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.description).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.activation_date).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.repeat).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"string\");\r",
							"  pm.expect(jsonData._id).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "346f8814-7aa4-4738-9cc3-56155c928fe2",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": \"weekly\",\r\n        \"status\": \"not completed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items",
				"description": "POST request for creation of new item in todo list. Request body consists of 5 properties:\n- \"name\" - name of new item\n- \"description\" - short description of to-do item\n- \"activation-date\" - date when item becomes visible to user\n- \"repeat\" - occurence schedule of created item (daily, weekly, monthly,...)\n- \"status\" - status of the item in to-do list (completed, not completed)"
			},
			"response": [
				{
					"id": "1bb125a7-b9df-482e-b2e4-e3250dc31972",
					"name": "Create request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": \"weekly\",\r\n        \"status\": \"not completed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.14.2"
						},
						{
							"key": "Date",
							"value": "Thu, 26 Jan 2023 18:34:02 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Location",
							"value": "/api/79867d1527f14b81ada642d3402104a2/items/63d2c79a07307e03e8c75ecf"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Access-Control-Allow-Methods",
							"value": "GET, POST, PUT, DELETE, OPTIONS"
						},
						{
							"key": "Access-Control-Allow-Headers",
							"value": "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range"
						},
						{
							"key": "Access-Control-Expose-Headers",
							"value": "Content-Length,Content-Range"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"name\": \"Item1\",\n    \"description\": \"This is a description of todo Item1\",\n    \"activation_date\": \"1674758042\",\n    \"repeat\": \"weekly\",\n    \"status\": \"not completed\",\n    \"_id\": \"63d2c79a07307e03e8c75ecf\"\n}"
				}
			]
		},
		{
			"name": "Create request-no Body",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a70edf40-bb13-46bb-a068-a7023cdf2461",
						"exec": [
							"pm.test(\"Unsuccessful POST request - missing body\", () => {\r",
							"  pm.response.to.have.status(415);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Response test\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData.type).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.eql(\"Unsupported Media Type\");\r",
							"  pm.expect(jsonData.status).to.be.an(\"number\");\r",
							"  pm.expect(jsonData.status).to.eql(415);\r",
							"  pm.expect(jsonData.traceId).to.be.a(\"string\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "f25276d3-5d55-485b-a114-302069020464",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": [
				{
					"id": "33ef4fe7-3276-40d1-b595-bddbcc6a132b",
					"name": "Create request-no Body",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
					},
					"status": "Unsupported Media Type",
					"code": 415,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.14.2"
						},
						{
							"key": "Date",
							"value": "Thu, 26 Jan 2023 19:20:23 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"type\": \"https://tools.ietf.org/html/rfc7231#section-6.5.13\",\n    \"title\": \"Unsupported Media Type\",\n    \"status\": 415,\n    \"traceId\": \"0HMNQNNCBEHIA:00000001\"\n}"
				}
			]
		},
		{
			"name": "Create request - syntax error",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ffc73d1f-458f-4b3a-b171-3b41e8555d9e",
						"exec": [
							"pm.test(\"Unsuccessful POST request - syntax error\", () => {\r",
							"  pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"Response test\", () => {\r",
							"  pm.expect(jsonData).to.be.an(\"object\");\r",
							"  pm.expect(jsonData).to.have.property('error');\r",
							"  pm.expect(jsonData.title).to.be.a(\"string\");\r",
							"  pm.expect(jsonData.title).to.eql(\"One or more validation errors occured\");\r",
							"  pm.expect(jsonData.status).to.be.a(\"number\");\r",
							"  pm.expect(jsonData.status).to.eql(400);\r",
							"  pm.expect(jsonData.traceId).to.be.a(\"string\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "8eb13fcf-f008-4189-ab0e-76abdde7cbb1",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": weekly\",\r\n        \"status\": \"not completed\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items",
				"description": "Property \"repeat\" in request body is missing \" before value"
			},
			"response": [
				{
					"id": "a03fe5ae-e879-4a2a-81ab-ca42f35f134e",
					"name": "Create request - syntax error",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{       \"name\": \"Item1\",\r\n        \"description\": \"This is a description of todo Item1\",\r\n        \"activation_date\": \"{{$timestamp}}\",\r\n        \"repeat\": weekly\",\r\n        \"status\": \"not completed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
					},
					"status": "Bad Request",
					"code": 400,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Server",
							"value": "nginx/1.14.2"
						},
						{
							"key": "Date",
							"value": "Thu, 26 Jan 2023 18:56:02 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/problem+json; charset=utf-8"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"responseTime": null,
					"body": "{\n    \"errors\": {\n        \"repeat\": [\n            \"Unexpected character encountered while parsing value: w. Path 'repeat', line 4, position 18.\"\n        ]\n    },\n    \"title\": \"One or more validation errors occurred.\",\n    \"status\": 400,\n    \"traceId\": \"0HMNQNNCBEH2K:00000001\"\n}"
				}
			]
		},
		{
			"name": "Read all request",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e4c44490-0b11-4cf6-88c5-d71adf395516",
						"exec": [
							"pm.test(\"Status code is 200\", function(){\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "eb24f823-4081-495d-8776-f4537d761134",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"John Doe\",\r\n    \"email\": \"john.doe@domain.com\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/items"
			},
			"response": []
		},
		{
			"name": "Read request",
			"id": "418c2a7d-f22d-4abc-a67d-20abb858e2a5",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		},
		{
			"name": "Update request",
			"id": "28abbb73-bc77-4b77-b2cb-cb74179a28c9",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "PUT",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		},
		{
			"name": "Delete request",
			"id": "ba0ff658-68c2-44df-a700-4215333b0710",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "DELETE",
				"header": [],
				"url": "https://crudcrud.com/api/79867d1527f14b81ada642d3402104a2/resource/id"
			},
			"response": []
		}
	]
}